import 'dart:convert';
import 'dart:io';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart' as pw;
import 'package:printing/printing.dart';
import 'package:provider/provider.dart';
import 'package:qr_flutter/qr_flutter.dart';
import 'package:kenz/constants/font_manager.dart';
import 'package:kenz/constants/values_manger.dart';
import 'package:kenz/models/pos_sales_model/payment_type_model.dart';
import 'package:kenz/models/pos_sales_model/sales_shift_model.dart';
import 'package:kenz/provider/pos_sales_notifier.dart';
import 'package:kenz/provider/product_management_notifier.dart';
import 'package:kenz/provider/setup_settings_notifier.dart';

import '../constants/string_manager.dart';
import '../core/notifier/profile/profile_notifier.dart';
import '../core/service/shared_preferance_service.dart';
import '../models/pos_sales_model/sales_model.dart';
import '../models/pos_sales_model/sales_product_model.dart';
import 'checken_in_notifier.dart';
import 'customer_notifier.dart';
import 'dataBase_fetch_notifier.dart';
import 'database_functionalities_notifier.dart';

class InvoicePrintingNotifier extends ChangeNotifier{

bool _isDone = false;

bool get getIsDone => _isDone;


CacheService _cashService = CacheService();


  Future<void> printInvoice({required BuildContext context,required bool isRecentTransaction,required String orderID,required String invoiceID}) async {
    _isDone = false;
    notifyListeners();
    final productManagementNotifier = context.read<ProductManagementNotifier>();
    final profileNotifier = context.read<ProfileNotifier>();

    final pdf = pw.Document();

    final userID = await _cashService.readCache(key: AppStrings.userId);
    final Uint8List fontData = File('asset/fonts/Rubik-VariableFont_wght.ttf').readAsBytesSync();
    final font = await PdfGoogleFonts.vazirmatnRegular();
    final ttf = pw.Font.ttf(fontData.buffer.asByteData());
    List<SalesProductModel> listProductData =[];


///page building
    List<pw.TableRow> invoiceList = List.generate(
        productManagementNotifier.getSelectedIndices.length,
            (index) {
          final data = productManagementNotifier.getSelectedIndices[index];
          listProductData.add(SalesProductModel(
            name: data.name,
            name_arabic: data.name_arabic,
            added: null,
            discount: null,
            discount_type: null,
            discounted_price: null,
            gross_total:data.priceWithoutVat.toString(),
            quantity:  data.qty.toString(),
            total_amount:data.total.toString(),
            vat_amount: data.vat.toString()
          ));
          return   pw.TableRow(
            children: < pw.Widget>[
              pw.Padding(
                padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                child:      pw.SizedBox(
                  width: 16 * PdfPageFormat.mm,
                  child:     pw.Text(
                      data.name_arabic ?? "",
                      style: testStyle(FontSize.s6, font),
                      textAlign: pw.TextAlign.center,textDirection:
                  pw.TextDirection.rtl

                  ),
                ),
              ),


              pw.Padding(
                padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                child:   pw.Text(
                    data.qty.toString() ?? "",
                    style: testStyle(FontSize.s6, pw.Font.courier()),
                    textAlign: pw.TextAlign.center
                ),
              ),
              pw.Padding(
                padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                child:   pw.Text(
                   ( data.price ?? 0).toStringAsFixed(2),
                    style: testStyle(FontSize.s6, pw.Font.courier()),
                    textAlign: pw.TextAlign.center
                ),
              ),
              pw.Padding(
                padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                child:   pw.Text(
                    (data.discount ?? 0).toStringAsFixed(2) ,
                    style: testStyle(FontSize.s6, pw.Font.courier()),
                    textAlign: pw.TextAlign.center
                ),
              ),
              pw.Padding(
                padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                child:   pw.Text(
                    (data.total ?? 0).toStringAsFixed(2) ,
                    style: testStyle(FontSize.s6, pw.Font.courier()),
                    textAlign: pw.TextAlign.center
                ),
              ),
            ],
          );
          
            });
    // Add a page to the PDF
    pdf.addPage(
      pw.Page(
        pageFormat: PdfPageFormat.roll80,
        build: (pw.Context context) {
          return pw.Center(
            child: pw.Column(
              children: [
                pw.Container(
                    height: 150,
                    padding: pw.EdgeInsets.symmetric(horizontal:AppPadding.p16),
                    child: pw.Image(pw.MemoryImage(base64Decode("")))
                ),
                pw.SizedBox(height: 10),
                pw.Text(
                    profileNotifier.getProfile?.result?[0].companyName ?? "",
                    style: testStyle(FontSize.s14,pw.Font.courierBold(),
                    )
                ),
                pw.SizedBox(height: 10),
                pw.Align(
                  alignment: pw.Alignment.centerLeft,
                  child:  pw.Container(
                      padding: const pw.EdgeInsets.symmetric(horizontal:AppPadding.p16),
                      child: pw.Column(
                          crossAxisAlignment: pw.CrossAxisAlignment.start,
                          mainAxisAlignment: pw.MainAxisAlignment.start,
                          children: [
                            pw.Text(
                                'Customer Name: Pos Customer',
                                style: testStyle(FontSize.s8,pw.Font.courierBold())
                            ),
                            pw.Text(
                                '${profileNotifier.getProfile?.result?[0].companyAddress1Arabic ?? ""} - ${profileNotifier.getProfile?.result?[0].companyAddress2Arabic ?? ""}',
                                style: testStyle(FontSize.s8,pw.Font.courierBold())

                            ),
                            pw.Text(
                                'mobile number:${profileNotifier.getProfile?.result?[0].tele ?? ""}',
                                style: testStyle(FontSize.s8,pw.Font.courierBold())

                            ),
                            pw.Text(
                                'Vat Number :${profileNotifier.getProfile?.result?[0].companyVat ?? ""}',
                                style: testStyle(FontSize.s8,pw.Font.courierBold())

                            ),
                            pw.Text(
                                'Crn Number :${profileNotifier.getProfile?.result?[0].companyCrn ?? ""}',
                                style: testStyle(FontSize.s8,pw.Font.courierBold())

                            ),
                          ]
                      )
                  ),
                ), pw.SizedBox(height: 20),

                pw.Container(

                    decoration: pw.BoxDecoration(
                      border: pw.Border.all(
                        width: 1, //                   <--- border width here
                      ),
                    ),
                    padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p16),
                    height: 20,
                    child: pw.Center(
                      child: pw.Text(
                          'Order No : ${isRecentTransaction ? orderID  :productManagementNotifier.getOrderNo}',
                          style: testStyle(FontSize.s14,pw.Font.courierBold())
                      ),
                    )
                ),
                pw.SizedBox(height: 20),
                ///top table area
                pw.Container(
                  padding: pw.EdgeInsets.symmetric(horizontal:AppPadding.p16),
                  child: pw.Table(

                    children: <pw.TableRow>[
                      pw.TableRow(
                        children: < pw.Widget>[
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                'Invoice \nNo',
                                style: testStyle(FontSize.s8, pw.Font.courierBold()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                'Date',
                                style: testStyle(FontSize.s8, pw.Font.courierBold()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                'Type',
                                style: testStyle(FontSize.s8, pw.Font.courierBold()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                'Payment',
                                style: testStyle(FontSize.s8, pw.Font.courierBold()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                        ],
                      ),
                      pw.TableRow(
                        children: <pw.Widget>[
                          pw.Divider(),
                          pw. Divider(),
                          pw. Divider(),
                          pw. Divider(),
                        ],
                      ),
                    
                      pw.TableRow(
                        children: < pw.Widget>[
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                              isRecentTransaction ? invoiceID :  productManagementNotifier.getInvoiceNo.toString(),
                                style: testStyle(FontSize.s6, pw.Font.courier()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                '03-09-2023\n09:23 PM',
                                style: testStyle(FontSize.s6, pw.Font.courier()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                productManagementNotifier.getIsParcel ? "Parcel" : "Dinning",
                                style: testStyle(FontSize.s6, pw.Font.courier()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),

                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                productManagementNotifier.getPaymentTypeString ?? "",
                                style: testStyle(FontSize.s6, pw.Font.courier()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),
                pw.SizedBox(height: 10),
                ///product list area

                pw.Container(
                  padding: pw.EdgeInsets.symmetric(horizontal:AppPadding.p16),
                  child: pw.Table(
                    children: <pw.TableRow>[
                      pw.TableRow(
                        children: < pw.Widget>[
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child: pw.Text(
                                'Name',
                                style: testStyle(FontSize.s8, pw.Font.courierBold()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                'QTY',
                                style: testStyle(FontSize.s8, pw.Font.courierBold()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                'Price',
                                style: testStyle(FontSize.s8, pw.Font.courierBold()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                'Discount',
                                style: testStyle(FontSize.s8, pw.Font.courierBold()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                          pw.Padding(
                            padding: pw.EdgeInsets.symmetric(horizontal: AppPadding.p2),
                            child:   pw.Text(
                                'Total',
                                style: testStyle(FontSize.s8, pw.Font.courierBold()),
                                textAlign: pw.TextAlign.center
                            ),
                          ),
                        ],
                      ),
                      pw.TableRow(
                        children: <pw.Widget>[
                          pw.Divider(),
                          pw. Divider(),
                          pw. Divider(),
                          pw. Divider(),
                          pw. Divider(),
                        ],
                      ),
                       ...invoiceList,
                    ],
                  ),
                ),

                ///sub total area
                pw.Align(
                  alignment: pw.Alignment.centerRight,
                  child:    pw.Container(
                    padding: pw.EdgeInsets.all(AppPadding.p16),
                    child: pw.Column(
                      crossAxisAlignment: pw.CrossAxisAlignment.end,
                      children: [
                        // Subtotal
                        pw.Text(
                            'Total Product Value(SAR): ${productManagementNotifier.getSubTotal.toStringAsFixed(2)}',
                            style: testStyle(FontSize.s8, pw.Font.courierBold()),
                            textAlign: pw.TextAlign.center
                        ),
                        pw.SizedBox(height: 5),
                        pw.Text(
                            'Net Discount(SAR): 0.00',
                            style: testStyle(FontSize.s8, pw.Font.courierBold()),
                            textAlign: pw.TextAlign.center
                        ),
                        pw.SizedBox(height: 5),
                        pw.Text(
                            'VAT(15%): ${productManagementNotifier.getTaxAmount.toStringAsFixed(2)}',
                            style: testStyle(FontSize.s8, pw.Font.courierBold()),
                            textAlign: pw.TextAlign.center
                        ),
                        pw.SizedBox(height: 5),
                        pw.Text(
                            'Net Due: ${productManagementNotifier.getTotal.toStringAsFixed(2)}',
                            style: testStyle(FontSize.s8, pw.Font.courierBold()),
                            textAlign: pw.TextAlign.center
                        ),
                        pw.SizedBox(height: 5),
                        pw.Text(
                            'Paid: ${productManagementNotifier.getPaid.toStringAsFixed(2)}',
                            style: testStyle(FontSize.s8, pw.Font.courierBold()),
                            textAlign: pw.TextAlign.center
                        ),
                        pw.SizedBox(height: 5),
                        pw.Text(
                            'Balance: ${productManagementNotifier.getBalance.toStringAsFixed(2)}',
                            style: testStyle(FontSize.s8, pw.Font.courierBold()),
                            textAlign: pw.TextAlign.center
                        ),

                      ],
                    ),
                  ),
                ),

                pw.BarcodeWidget(
                    data: generateQRCodeString(sellerName: "test", vatRegNo: "300292909310003", timeStamp: DateTime.now().toString(), invoiceAmount: "299", invoiceVAT: "39"),
                    barcode: pw.Barcode.qrCode(),
                    width: 75,
                    height: 75
                ),
                pw.SizedBox(height: 10),

                pw.Text(
                    'Thank you for your business',
                    style: testStyle(FontSize.s8, pw.Font.courierBold()),
                    textAlign: pw.TextAlign.center
                ),
                pw.Text(
                    'POWERED BY KENZ TECHNOLOGY\nwww.kenztechnology.com\n +966 53 903 6749',
                    style: testStyle(FontSize.s10, pw.Font.courierBold()),
                    textAlign: pw.TextAlign.center
                ),

              ],
            )
          );
        },
      ),
    );

    /// Sales entry
    if(!isRecentTransaction){
      context.read<PosSaleNotifier>().setPosSaleInvoice(context: context, listProductData: listProductData);
    }

/// printing
    await Printing.layoutPdf(
      usePrinterSettings: false,
      onLayout: (format) async => pdf.save(),
      format: PdfPageFormat.roll80,
    ).then((value) async {
      productManagementNotifier.cleanAfterSale();

      if(!isRecentTransaction) {
        await productManagementNotifier.setOrderAndInvoiceID(context: context);
      }
      _isDone = value;
      notifyListeners();
    });

//     final bool printStatus = await Printing.directPrintPdf(
//         printer: Printer(url: "Microsoft Print to PDF"),
//         onLayout: (format) async => pdf.save(),
//         format: PdfPageFormat.roll80);
//     print("eee $printStatus");
//     if(printStatus){
//       productManagementNotifier.cleanAfterSale();
//       await productManagementNotifier.setOrderAndInvoiceID(context: context);
//       _isDone = true;
//       notifyListeners();
//     }else{
//       _isDone = false;
//      notifyListeners();
//     }
  }
  pw.TextStyle testStyle(double size,pw.Font font){
    return pw.TextStyle(
        fontSize: size,
        font: font
    );
  }

  String generateQRCodeString({required String sellerName,required String vatRegNo,required String timeStamp,required String invoiceAmount,required String invoiceVAT}){
    BytesBuilder bytesBuilder = BytesBuilder();
// 1. Seller Name
    bytesBuilder.addByte(1);
    List<int> sellerNameBytes = utf8 .encode( sellerName) ;
    bytesBuilder .addByte( sellerNameBytes. length);
    bytesBuilder.add(sellerNameBytes) ;
// 2. VAT Registration
    bytesBuilder.addByte(2);
    List<int> vatRegistrationBytes = utf8.encode(vatRegNo);
    bytesBuilder.addByte(vatRegistrationBytes.length);
    bytesBuilder.add (vatRegistrationBytes);
    // 3. Time stamp
    bytesBuilder.addByte(3);
    List<int> timeStampByte = utf8.encode(timeStamp);
    bytesBuilder.addByte(timeStampByte.length);
    bytesBuilder.add (timeStampByte);
    // 4. Invoice Amount
    bytesBuilder.addByte(4);
    List<int> invoiceAmountByte = utf8.encode(invoiceAmount);
    bytesBuilder.addByte(invoiceAmountByte.length);
    bytesBuilder.add (invoiceAmountByte);
    // 4. Invoice VAT
    bytesBuilder.addByte(5);
    List<int> invoiceVATByte = utf8.encode(invoiceVAT);
    bytesBuilder.addByte(invoiceVATByte.length);
    bytesBuilder.add (invoiceVATByte);

    Uint8List qrCodeAsBytes = bytesBuilder. toBytes() ;
    final Base64Encoder b64Encoder = Base64Encoder ( ) ;
    return b64Encoder.convert(qrCodeAsBytes) ;

}
}